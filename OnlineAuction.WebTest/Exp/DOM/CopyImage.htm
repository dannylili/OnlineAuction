<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>理解浏览器中的对象Window，Frame,Document,Form编程</title>
    <!-- <script src="../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../Scripts/jquery-ui-1.8.11.min.js" type="text/javascript"></script>-->
    <link rel="stylesheet" href="http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" />
    <script src="http://code.jquery.com/jquery-1.8.3.js" type="text/javascript"></script>
    <script src="http://code.jquery.com/ui/1.9.2/jquery-ui.js" type="text/javascript"></script>
    <script language="javascript" type="text/javascript">
        $(function () {

            $(":image").each(function (i, n) {
                $(this).click(function () {
                    var image = $(this);
                    var newImage = image.clone(true); // 新属性将保留原来image的所有属性
                    var rand = Math.random();
                    newImage.attr("id", rand + "image");
                    newImage.unbind("click"); // 取消事件绑定 unbind
                    $("#rigth").append(newImage);
                });
            })

            // 设置拖动效果
            // 拖动元素的值revert: "valid" 控制元素是否可以返回到原来位置
            $("#draggable").draggable(); //设置拖动加入到其他列表中 {connectToSortable: ‘#rigth’}
            // $("#draggable").draggable({ revert: "valid" })

            // 接受被拖上来的元素
            $("#dropable").droppable({
                // revert: "valid",
                activeClass: "ui-state-hover",
                hoverClass: "ui-state-active",
                // 当拖动到另一个元素上时的处理,可以获取被拖动上这个元素的属性
                drop: function (event, ui) {
                    $(this).addClass("ui-state-highlight").find("> p").html("老大 下去 别压着我了呀"); // $(this)==dropable
                    return false;
                }
            });

            ///<summary>
            //取得鼠标选中元素
            ///<summary>
            $(": selected").each(function (i) {
                alert(i.id);
            })
        })


        function GetSelectElement() {
            var test = $("#draggable").offset(options.relativeTo);
            alert(test);
        }
    </script>
</head>
<body>
    <div>
        <div id="left">
            <input id="iamgeInitial" type="image" src="../../Image/completion100.png" style="border: 1px solid red;
                width: 30px; float: left;" /></div>
        <div id="rigth" style="border: 1px solid red; width: 500px; float: left; min-height: 200px;">
        </div>
    </div>
    <table>
        <tr>
            <td>
                <div>
                    <div id="draggable" style="border: 1px solid green;">
                        拖动我试试
                    </div>
                    <div id="dropable" style="background-color: Yellow; max-width: 200px; min-height: 300px;">
                        <p>
                        </p>
                    </div>
                </div>
            </td>
            <td>
                向左偏移<input type="text" id=“excursionLeft” value=""/>px
                向右偏移<input type="text" id=excursionRight value=""/>px
                <button id="btnExcursion" onclick="GetSelectElement()">设置</button>
            </td>
        </tr>
    </table>
</body>
</html>

